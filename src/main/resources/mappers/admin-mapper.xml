<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminMapper">
	<resultMap type="Book" id="bookResultMap">
		<id property="bookNo" column="BOOK_NO"/>
		<result property="bookName" column="BOOK_NAME"/>
		<result property="bookWriter" column="BOOK_WRITER"/>
		<result property="bookSubject" column="BOOK_SUBJECT"/>
		<result property="publisher" column="PUBLISHER"/>
		<result property="bookYear" column="BOOK_YEAR"/>
		<result property="callNo" column="CALL_NO"/>
		<result property="isbn" column="ISBN"/>
		<result property="bookCover" column="BOOK_COVER"/>
		<result property="theme" column="THEME"/>
		<result property="bookState" column="BOOK_STATE"/>
		<result property="updateDate" column="UPDATE_DATE"/>
		<result property="lendingCount" column="LENDING_COUNT"/>
	</resultMap>
	<resultMap type="Member" id="memberResultMap">
		<id property="userId" column="USER_ID"></id>
		<result property="userPwd" column="USER_PWD"></result>
		<result property="userNo" column="USER_NO"></result>
		<result property="userName" column="USER_NAME"></result>
		<result property="userPhone" column="USER_PHONE"></result>
		<result property="userType" column="USER_TYPE"></result>
		<result property="userEmail" column="USER_EMAIL"></result>
		<result property="studentId" column="STUDENT_ID"></result>
		<result property="major" column="MAJOR"></result>
		<result property="profilePic" column="PROFILE_PIC"></result>
		<result property="annualFee" column="ANNUAL_FEE"></result>
		<result property="payDate" column="PAY_DATE"></result>
		<result property="enrollDate" column="ENROLL_DATE"></result>
		<result property="passCheck" column="PASS_CHECK"></result>
		<result property="approvalDate" column="APPROVAL_DATE"></result>
		<result property="endDate" column="END_DATE"></result>
		<result property="socialId" column="SOCIAL_ID"></result>
		<result property="surveyCheck" column="SURVEY_CHECK"></result>
		<result property="lendingCopy" column="LENDING_COPY"></result>
	</resultMap>
	<resultMap type="Qna" id="qnaResultMap">
		<id property="qnaNo" column="QNA_NO"></id>
		<result property="userId" column="USER_ID"></result>
		<result property="replyState" column="REPLY_STATE"></result>
		<result property="qnaTitle" column="QNA_TITLE"></result>
		<result property="qnaContent" column="QNA_CONTENT"></result>
		<result property="qnaWriteDate" column="QNA_WRITEDATE"></result>
		<result property="replyContent" column="REPLY_CONTENT"></result>
		<result property="replyWriteDate" column="REPLY_WRITEDATE"></result>
		<result property="replyUserId" column="REPLY_USERID"></result>
	</resultMap>
	<resultMap type="WishBook" id="wishbookResultMap">
		<id property="applyNo" column="APPLY_NO"></id>
		<result property="userId" column="USER_ID"/>
		<result property="bookName" column="BOOK_NAME"/>
		<result property="bookWriter" column="BOOK_WRITER"/>
		<result property="publisher" column="PUBLISHER"/>
		<result property="applyStatus" column="APPLY_STATUS"/>
		<result property="applyDate" column="APPLY_DATE"/>
	</resultMap>
	<resultMap type="Status" id="StatusResultMap">
		<id property="bookName" column="BOOK_NAME"></id>
		<result property="userId" column="USER_ID"/>
		<result property="bookNo" column="BOOK_NO"/>
		<result property="bookWriter" column="BOOK_WRITER"/>
		<result property="userNo" column="USER_NO"/>
		<result property="lendingDate" column="LENDING_DATE"/>
		<result property="returnDate" column="RETURN_DATE"/>
		<result property="extendCount" column="EXTEND_COUNT"/>
	</resultMap>
	
<!-- 	희망도서 리스트 -->
	<select id="wishBookList" resultMap="wishbookResultMap">
		SELECT * FROM WISH_BOOK WHERE APPLY_STATUS = '처리중' ORDER BY APPLY_NO DESC
	</select>
<!-- 	장서 리스트 -->
	<select id="selectBookList" resultMap="bookResultMap">
		SELECT * FROM BOOK ORDER BY BOOK_NO DESC
	</select>
<!-- 	대출현황 리스트 -->
	<select id="StatusBookList" resultMap="StatusResultMap">
		SELECT a.BOOK_NO,a.BOOK_NAME, a.BOOK_WRITER,d.USER_ID, d.USER_NO,c.LENDING_DATE, c.RETURN_DATE, c.EXTEND_COUNT
		FROM users d,BOOK a, BOOK_LENDING c
		WHERE c.USER_ID = d.USER_ID AND c.BOOK_NO = a.BOOK_NO
	</select>
<!-- 		장서 count -->
	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*) FROM BOOK
	</select>
<!-- 	희망도서 count -->
	<select id="selectWishListCount" resultType="_int">
		SELECT COUNT(*) FROM WISH_BOOK
	</select>
<!-- 	대출 현황 count -->
	<select id="selectStatusListCount" resultType="_int">
		SELECT COUNT(*) FROM(SELECT a.BOOK_NAME, a.BOOK_WRITER, d.USER_NO,c.LENDING_DATE, c.RETURN_DATE, c.EXTEND_COUNT
		FROM users d,BOOK a, BOOK_LENDING c
		WHERE c.USER_ID = d.USER_ID AND c.BOOK_NO = a.BOOK_NO)
	</select>
<!-- 	장서 검색 -->
	<select id="selectSearchList" resultMap="bookResultMap">
		SELECT * FROM BOOK
		<if test="searchCondition.toString() == 'name'">
		WHERE BOOK_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'writer'">
		WHERE BOOK_WRITER LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'publisher'">
		WHERE PUBLISHER LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'all'">
		WHERE BOOK_NAME LIKE '%' || #{searchValue} || '%'
		OR BOOK_WRITER LIKE '%' || #{searchValue} || '%'
		OR PUBLISHER LIKE '%' || #{searchValue} || '%'
		</if>
		ORDER BY BOOK_NO ASC
	</select>
<!-- 	장서 등록 -->
	<insert id="insertBook" parameterType="book">
		INSERT INTO BOOK VALUES(SEQ_BOOKNUM.NEXTVAL,#{bookName},#{bookWriter},#{bookSubject},#{publisher},#{bookYear},#{callNo},#{isbn},#{bookCover},#{theme},DEFAULT,DEFAULT,DEFAULT)
	</insert>
<!-- 	장서 삭제 -->
	<delete id="deleteBook" parameterType="java.util.ArrayList">
		DELETE BOOK WHERE BOOK_NO IN (
			<foreach collection="array" item="nums" index="index" separator=",">
				${nums}
			</foreach>
		)
	</delete>
	
	<!-- 관리자페이지 문의관리 -->
	<select id="selectQnaListCount" resultType="_int">
		SELECT COUNT(*) FROM QNA
	</select>
	<select id="selectUser" resultMap="memberResultMap">
		SELECT * FROM USERS WHERE USER_ID = #{userId}
	</select>
	<select id="selectAllQna" resultMap="qnaResultMap">
		SELECT * FROM QNA ORDER BY QNA_NO DESC
	</select>
	<select id="selectSearchQna" resultMap="qnaResultMap">
		SELECT * FROM QNA
    	<if test="searchCondition.toString() == 'writer'">
    		WHERE USER_ID LIKE '%' || #{searchValue} || '%'
    	</if>
    	<if test="searchCondition.toString() == 'title'">
    		WHERE QNA_TITLE LIKE '%' || #{searchValue} || '%'
    	</if>
    	<if test="searchCondition.toString() == 'state'">
    		WHERE REPLY_STATE LIKE '%' || #{searchValue} || '%'
    	</if>
    	ORDER BY QNA_NO DESC
	</select>
	<select id="getSearchCount" resultType="_int">
		SELECT COUNT(*) FROM QNA
    	<if test="searchCondition.toString() == 'writer'">
    		WHERE USER_ID LIKE '%' || #{searchValue} || '%'
    	</if>
    	<if test="searchCondition.toString() == 'title'">
    		WHERE QNA_TITLE LIKE '%' || #{searchValue} || '%'
    	</if>
    	<if test="searchCondition.toString() == 'state'">
    		WHERE REPLY_STATE LIKE '%' || #{searchValue} || '%'
    	</if>
	</select>
	<select id="selectOneQna" resultMap="qnaResultMap">
		SELECT * FROM QNA WHERE QNA_NO = #{qnaNo}
	</select>
	
	<update id="updateQna" parameterType="Qna">
		UPDATE QNA SET REPLY_STATE = 'Y', REPLY_CONTENT = #{replyContent}, REPLY_WRITEDATE = DEFAULT, REPLY_USERID = #{replyUserId} WHERE QNA_NO = #{qnaNo}
	</update>
	<!--                                                      -->
</mapper>